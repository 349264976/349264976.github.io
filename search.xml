<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hexo基本操作</title>
      <link href="/2023/07/15/hexo%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
      <url>/2023/07/15/hexo%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo的常用指令合集"><a href="#Hexo的常用指令合集" class="headerlink" title="Hexo的常用指令合集"></a>Hexo的常用指令合集</h1><p>xo有许多主题，其实最火爆的是NexT、Matery等，复制关键词到GitHub或者baidu都能搜到。权衡利弊最终我还是选择了大多数人使用的next。我这边先用的buttfly后期有时间再进行优化</p><h2 id="关于部署命令"><a href="#关于部署命令" class="headerlink" title="关于部署命令"></a>关于部署命令</h2><h4 id="（1）hexo-g或hexo-generate"><a href="#（1）hexo-g或hexo-generate" class="headerlink" title="（1）hexo g或hexo generate"></a>（1）<code>hexo g</code>或<code>hexo generate</code></h4><p>该命令执行后在hexo站点根目录下生成public文件夹</p><p><img src="C:\Users\李开恩\AppData\Roaming\Typora\typora-user-images\image-20230715194722355.png" alt="image-20230715194722355"></p><h4 id="（2）hexo-clean"><a href="#（2）hexo-clean" class="headerlink" title="（2）hexo clean"></a>（2）<code>hexo clean</code></h4><p>把（1）中的<code>public</code>文件夹删除</p><h4 id="（3）hexo-s或hexo-server"><a href="#（3）hexo-s或hexo-server" class="headerlink" title="（3）hexo s或hexo server"></a>（3）<code>hexo s</code>或<code>hexo server</code></h4><p>启动服务，默认地址为<a href="http://localhost:4000/%EF%BC%8C4000%E7%AB%AF%E5%8F%A3">http://localhost:4000/，4000端口</a></p><p><img src="C:\Users\李开恩\AppData\Roaming\Typora\typora-user-images\image-20230715194810602.png" alt="image-20230715194810602"></p><h4 id="4）hexo-d或hexo-deploy"><a href="#4）hexo-d或hexo-deploy" class="headerlink" title="4）hexo d或hexo deploy"></a>4）<code>hexo d</code>或<code>hexo deploy</code></h4><p>部署站点，在本地生成<code>.deploy_git</code>文件夹，并将编译后的文件上传至 GitHub。</p><h4 id="5）hexo-new"><a href="#5）hexo-new" class="headerlink" title="5）hexo new"></a>5）hexo new</h4><p>例如： hexo new photo “my-first-blog”<br>上述指令执行时，Hexo 会尝试在 scaffolds 中寻找photo.md布局，若找到，则根据该布局新建文章；若未找到或指令中未指定该参数，则使用post.md新建文章。新建文章的名称在_config.yml中配置。</p><h4 id="（6）删除文章"><a href="#（6）删除文章" class="headerlink" title="（6）删除文章"></a>（6）删除文章</h4><p>只需在本地把<code>source/_posts</code>文件夹下的文章源文件删除后，执行以下命令重新部署即可。</p><pre><code class="hexo">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s // 一定要先 clean，防止灵异事件发生</code></pre><h4 id="7）重新打包发布到本地"><a href="#7）重新打包发布到本地" class="headerlink" title="7）重新打包发布到本地"></a>7）重新打包发布到本地</h4><pre><code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code></pre><h4 id="8）重新打包发布到GItHub"><a href="#8）重新打包发布到GItHub" class="headerlink" title="8）重新打包发布到GItHub"></a>8）重新打包发布到GItHub</h4><pre><code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code></pre><h1 id="Hexo写文章基本操作"><a href="#Hexo写文章基本操作" class="headerlink" title="Hexo写文章基本操作"></a>Hexo写文章基本操作</h1><h2 id="步骤1"><a href="#步骤1" class="headerlink" title="步骤1"></a>步骤1</h2><p>打开hexo的根目录，也就是里面有_config.yml, source, themes等等的那个，对于我个人我把他叫做myblog</p><h2 id="步骤2"><a href="#步骤2" class="headerlink" title="步骤2"></a>步骤2</h2><p>在该目录下打开git bash，执行该代码，可在浏览器打开<code>http://localhost:4000/</code>进行实时查看自己的网站。（注意：此时外网还不能访问本地的修改，只有提交之后才能访问。）</p><pre><code>hexo server</code></pre><h2 id="步骤3（此时还是在根目录下执行以下操作）"><a href="#步骤3（此时还是在根目录下执行以下操作）" class="headerlink" title="步骤3（此时还是在根目录下执行以下操作）"></a>步骤3（此时还是在根目录下执行以下操作）</h2><h3 id="新建发布文章（post-page）"><a href="#新建发布文章（post-page）" class="headerlink" title="新建发布文章（post page）"></a>新建发布文章（post page）</h3><p>执行以下命令后会自动在<code>\myblog\source\_posts</code>下新建一个<code>a.md</code>并且标题是“a”，此时刷新<code>http://localhost:4000/</code>可以看到本地已经更新出标题为a的这篇文章。</p><pre><code>hexo new a</code></pre><h3 id="新建草稿（draft-page）"><a href="#新建草稿（draft-page）" class="headerlink" title="新建草稿（draft page）"></a>新建草稿（draft page）</h3><p>执行以下命令后会自动在<code>\myblog\source\_drafts</code>下新建一个<code>b.md</code>并且标题是“b”，此时刷新<code>http://localhost:4000/</code>本地并没有更新出这篇文章。</p><pre><code>hexo new draft b</code></pre><h3 id="发布草稿"><a href="#发布草稿" class="headerlink" title="发布草稿"></a>发布草稿</h3><p>草稿可以通过命令变成发布文章，仍然是需要在根目录执行以下命令</p><pre><code>hexo publish b</code></pre><p>这个时候你会发现_drafts里的b.md不见了，跑到了_posts里面,也就说明你的草稿发布成功了。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
